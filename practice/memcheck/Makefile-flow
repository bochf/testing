#----------------------------------------------------------------------
# === UPDATE FLOWGEN DOCUMENTATION ===
#----------------------------------------------------------------------

#default compiler (to compile the program, Flowgen ignores this: it does always use Clang via the Python bindings)
CXX=g++
#Flowgen folder
FLOWGEN_DIR=~/tools/Flowgen/

CCSOURCEFILES := $(shell ls *.cpp)
FLOWHTML_FROMCCSOURCEFILES := $(shell ls *.cpp | sed s/^/"flowdoc\/"/)
FLOWDBS_FROMCCSOURCEFILES := $(shell ls *.cpp | sed s/^/"flowdoc\/aux_files\/"/)
FLOWHTML:= $(FLOWHTML_FROMCCSOURCEFILES:.cpp=.html) 
FLOWDBS:= $(FLOWDBS_FROMCCSOURCEFILES:.cpp=.flowdb)

#$(TMPDIR)/%.txt : src/%.cpp
#	@echo "cc-to-txt: processing $^ to make $@"
#	@echo execute src-to-txt-converter
#	
#flowdoc/%.html : $(TMPDIR)/%.txt
#	@echo "txt-to-html: processing $^ to make $@ (remember to also make pngs)"
#	@echo execute txt-to-html-converter
    
#flowdoc/memcheck.html : simple_demo_src.cpp makeflows.py
#	@echo "a"

all: flowdoc a.out

#generates the documentation			
flowdoc: main.cpp $(FLOWDBS) $(FLOWHTML) Makefile flowdoc/aux_files/runphase 
	@echo "Hopla! Finished flowdoc creation. Check flowdocs."
	
flowdoc/aux_files/%.flowdb : %.cpp $(FLOWGEN_DIR)build_db.py
	@echo "cpp-to-flowdb: preprocessing"
	python3 $(FLOWGEN_DIR)build_db.py main.cpp -I.
		
flowdoc/aux_files/runphase: $(CCSOURCEFILES) main.cpp $(FLOWGEN_DIR)makeflows.py
	@echo "cpp-to-graphs: depends on $^"
	python3 $(FLOWGEN_DIR)makeflows.py main.cpp -I.
	java -jar $(FLOWGEN_DIR)plantuml.jar flowdoc/aux_files/*.txt
	cat <<EOF > flowdoc/aux_files/runphase
	
flowdoc/%.html : flowdoc/aux_files/%.flowdb $(FLOWGEN_DIR)makehtml.py flowdoc/aux_files/runphase
	@echo "to-html: processing $^ to make $@"
	cp -r $(FLOWGEN_DIR)htmlCSSandJS/ flowdoc/htmlCSSandJS/
	python3 $(FLOWGEN_DIR)makehtml.py main.cpp

