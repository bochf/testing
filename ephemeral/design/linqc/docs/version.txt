This is a verbose version change log. I use this to track todos and changes
in a more verbose way than the git commit tends to allow for.


Version history:
  0.1.0    4/9/14 - Initial versioned copy
                  - Added the NOPF return value for when a policy file was
                    not found. The behavior here is NOT to continue with some
                    hard coded default value, but to consider this a specific
                    type of error. This may be worth discussing - but I think
                    this behavior is appropriate for the "fragile model".
                  - A raft of basic functionality mostly associated with the
                    CL wrapper at this time.
  0.2.0    4/9/14 - Snapped a commmit due to the number of changes
  0.3.0   4/10/14 - Implemented overrides
                  - Changed log file source name
                  - Added in sample about() blocks (as comments)
  0.4.0   4/14/14 - Moved BL findings back into main code


ToDo:
  [ ] I don't think the "lock" mechanisim is really required. One alternative
      would be to move the config file or just remove it entirely. (The
      framework could put the settings in the top of the run file. 000_start
      could do this.)
  [_] The global config should offer a *hint* on "If run from BL". This would
      be an optional param that would be set that IsRunFromBL() could look for.
      This would prevent that function from calling ps twice for each test.
      (Which is an undesirable side effect of pushing logic down into the
      functions - there is a loss of persistent info.) Of course the converse
      of this would be the wrapper just saying "I am NOT BL". In both cases,
      because the wrappers (BL & CL) need to place the config file, it should
      be trivial to derive and place this informaiton. (coded, not tested)
  [_] Overrides need an explicit format declaration. Defined, not implemented.
  [ ] Is relative pathing appropriate? Will this work in BL? Can BL set the
      CWD required for explicit pathing?
  [ ] Verbose ANSI scrubbing is not supported
  [ ] The runs need to be timestamped to keep track of execution time. This
      is important for keeping development efforts clean. Only the total time
      needs to be kept. (Not individual times - although it could be used to
      track min/max/avg per-times. Furthermore - a debug/timing mode could be
      turned on to keep track of this (temporarily)) Timekeeping is critical!
  [ ] Trap Ctrl-C, clean up.
  [_] Add lock reset capability.
  [ ] Add an option to run against the current config. The idea here is that
      the value of the CL wrapper is that it can debug. The ability to run
      again against whatever BL dropped without overwriting it would be of
      value.

Done:
  [X] Run the same tests through a BL compliance job
  [X] The QCGlobal.conf should have a "generated by" and timestamp in the
      header comments.
  [X] Parse results, print "standard" tag at end
  [X] Get a handle on verbosity issues.
  [X] Verbose table printing is not supported
  [X] The log file MUST be specified in the global config. This is because the
      tests might be called independently, and /dev/null needs to be passed
      when a verbose logging simply is NOT DESIRED. This is an edge case, but
      should be made available for alternative uses.
  [X] Results file is /dev/null - finish the implementation please!
  [X] cp QC000_start QC999_end ; edit.
  [X] Hey, what about about()?
  [X] Where are the overrides?
  [X] Get a basic CL wrapper running
  [X] Validate that we are running on the expected OS. This might be a job
      for QC000_start. ---> exit with a QCRV_BAIL value to stop. (No: The
      wrapper has 
  [X] Create an output (runlog) directory
  [X] The check looks at the format of the policy file. I think a return code
      of BADP (Bad Policy Format) may be approprite.
